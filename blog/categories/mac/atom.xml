<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mac | #morcmarc]]></title>
  <link href="http://morcmarc.com/blog/categories/mac/atom.xml" rel="self"/>
  <link href="http://morcmarc.com/"/>
  <updated>2014-10-11T13:21:02+01:00</updated>
  <id>http://morcmarc.com/</id>
  <author>
    <name><![CDATA[Marcell Jusztin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TDD With PHPUnit on Mac OS X Lion]]></title>
    <link href="http://morcmarc.com/blog/2012/05/10/setting-up-tdd-for-php-on-mac-os-x-lion/"/>
    <updated>2012-05-10T18:21:00+01:00</updated>
    <id>http://morcmarc.com/blog/2012/05/10/setting-up-tdd-for-php-on-mac-os-x-lion</id>
    <content type="html"><![CDATA[<p>Test-Driven Development has been around for a while now as more and more companies are using Agile or Extreme Development principles in their daily coding business. Many advanced web frameworks come with built-in support for some kind of testing tool or make it easy to integrate one into your setup. Today I would like to share my experience on getting started with TDD on PHPUnit. I will also show how to setup Code Coverage and Selenium.</p>

<!--more-->


<h2>Prerequisites</h2>

<p>I assume you have the latest Mac OS X Lion installed (10.7.4 at the time of writing this article). I&rsquo;m going to use PHP 5.3.10 shipped with the OS. I don&rsquo;t suggest using LAMP environments as they can casue unwanted issues unless you know what you are doing. Spending some time on upgrading and configuring the existing packages can be a well-worth investment anyways. In case you have to use a different PHP version you might want to check out <a href="https://github.com/c9s/phpbrew">phpbrew</a> which gives an RVM-like way to manage several PHP versions.</p>

<p>You should also have the latest XCode installed (or GCC with necessary libraries)</p>

<h2>Installing PEAR</h2>

<p>First, we need to install <a href="pear.php.net">PEAR</a>, the package manager for PHP. Open a terminal and execute the following commands:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>wget &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://pear.php.net/go-pear.phar&quot;</span>&gt;http://pear.php.net/go-pear.phar&lt;/a&gt;
</span><span class='line'>php -d <span class="nv">detect_unicode</span><span class="o">=</span><span class="m">0</span> go-pear.phar
</span></code></pre></td></tr></table></div></figure></p>

<p>I suggest setting the <code>$prefix</code> to <code>/usr/local/pear</code>, but it&rsquo;s up to you where you want to put your files.</p>

<p>Next we have to add PEAR to the PATH variable (I prefer ZSH over bash, please update the filename in case you are using a different terminal) then we can run a test:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">echo</span> <span class="p">&amp;</span>lsquo<span class="p">;</span><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span>/usr/local/pear/bin:<span class="nv">$PATH</span><span class="p">&amp;</span>rsquo<span class="p">;</span> &gt;&gt; ~/.zshrc
</span><span class='line'><span class="nb">source</span> ~/.zshrc
</span><span class='line'>pear
</span></code></pre></td></tr></table></div></figure></p>

<h2>Installing PHPUnit</h2>

<p>We can now move to <a href="https://github.com/sebastianbergmann/phpunit/">PHPUnit</a>. Type:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>pear config-set auto_discover 1
</span><span class='line'>pear install pear.phpunit.de/PHPUnit
</span><span class='line'>pear install phpunit/DbUnit
</span><span class='line'>pear install phpunit/PHPUnit_Selenium
</span></code></pre></td></tr></table></div></figure></p>

<p>Let&rsquo;s test. Create a new file and paste the following code:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="o">?</span><span class="nx">php</span> <span class="c1">//BankAccountTest.php</span>
</span><span class='line'><span class="k">require_once</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">BankAccount</span><span class="o">.</span><span class="nx">php</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">BankAccountTest</span> <span class="k">extends</span> <span class="nx">PHPUnit_Framework_TestCase</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">protected</span> <span class="nv">$ba</span><span class="p">;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="k">protected</span> <span class="k">function</span> <span class="nf">setUp</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&amp;</span><span class="nx">gt</span><span class="p">;</span><span class="nx">ba</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">BankAccount</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure></p>

<p>We can run our test case (and watch it fail) by running:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>phpunit BankAccountTest
</span></code></pre></td></tr></table></div></figure></p>

<p>Congratulations! You can start developing your PHP application with TDD. The following steps are optional but I strongly suggest to keep going on.</p>

<h2>Setting up Code Coverage</h2>

<p>In order to make the Code Coverage module work we have to install XDebug. <a href="http://kubyshkin.ru/programming/installing-php-xdebug-extension-on-mac-os-x-10-7-lion/">Dmitriy Kubyshkin</a> posted a great article on the matter. The easiest way is to get a binary from <a href="http://code.activestate.com/komodo/remotedebugging/">ActiveState</a>.  Extract the 5.3 binary <code>xdebug.so</code> and move it to <code>usr/lib/php/extensions/no-debug-non-zts-20090626/</code>. Then you need to enable the module in your <code>php.ini</code> file which is located under <code>/etc/</code>. In case you can&rsquo;t see it create a copy from the template:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo cp /private/etc/php.ini.default /etc/php.ini
</span></code></pre></td></tr></table></div></figure></p>

<p>Open up the file and paste the following at end:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[xdebug]
</span><span class='line'>zend_extension=/usr/lib/php/extensions/no-debug-non-zts-20090626/xdebug.so
</span><span class='line'>xdebug.file_link_format=&ldquo;txmt://open?url=file://%f&amp;line=%1&rdquo;
</span><span class='line'>xdebug.remote_enable = On
</span><span class='line'>xdebug.remote_autostart = 1</span></code></pre></td></tr></table></div></figure></p>

<p>Then restart your apache.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apachectl restart
</span></code></pre></td></tr></table></div></figure></p>

<p>Now we can start generating our reports:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>phpunit <span class="p">&amp;</span>ndash<span class="p">;</span>coverage-html ./report BankAccountTest
</span></code></pre></td></tr></table></div></figure></p>

<h2>Selenium</h2>

<p>Selenium is a great automated testing tool. They have different solutions tailored to your business needs. To get us up and running quickly with Selenium I&rsquo;m going to use their Grid2 package.</p>

<p>First, download the standalone server <code>JAR</code> file from <a href="http://code.google.com/p/selenium/downloads/list">here</a>. Next you have to start up the Hub (replace version number accordingly):</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>java -jar selenium-server-standalone-2.14.0.jar -role hub
</span></code></pre></td></tr></table></div></figure></p>

<p>You can view the status of the hub by opening a browser window and navigating to: <a href="http://localhost:4444/grid/console">http://localhost:4444/grid/console</a>.</p>

<p>Open a new terminal tab and run the following to start a Node:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>java -jar selenium-server-standalone-2.14.0.jar -role node  -hub &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://localhost:4444/grid/register&quot;</span>&gt;http://localhost:4444/grid/register&lt;/a&gt;
</span></code></pre></td></tr></table></div></figure></p>

<p>For further configuration options and documentation visit <a href="http://code.google.com/p/selenium/wiki/Grid2">http://code.google.com/p/selenium/wiki/Grid2</a></p>

<p>Now that we have our servers running we can start writing our tests:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="o">?</span><span class="nx">php</span> <span class="c1">//WebTest.php</span>
</span><span class='line'><span class="k">class</span> <span class="nc">WebTest</span> <span class="k">extends</span> <span class="nx">PHPUnit_Extensions_Selenium2TestCase</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">protected</span> <span class="k">function</span> <span class="nf">setUp</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setBrowser</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">firefox</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setBrowserUrl</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="nx">a</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;http://www.example.com/&quot;</span><span class="o">&gt;</span><span class="nx">http</span><span class="o">://</span><span class="nx">www</span><span class="o">.</span><span class="nx">example</span><span class="o">.</span><span class="nx">com</span><span class="o">/&lt;/</span><span class="nx">a</span><span class="o">&gt;&amp;</span><span class="nx">rsquo</span><span class="p">;);</span>
</span><span class='line'>    <span class="p">}</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="k">public</span> <span class="k">function</span> <span class="nf">testTitle</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&amp;</span><span class="nx">gt</span><span class="p">;</span><span class="nx">url</span><span class="p">(</span><span class="s1">&#39;http://www.example.com/&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&amp;</span><span class="nx">gt</span><span class="p">;</span><span class="nx">assertEquals</span><span class="p">(</span><span class="s1">&#39;Example WWW Page&#39;</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&amp;</span><span class="nx">gt</span><span class="p">;</span><span class="nx">title</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>phpunit WebTest
</span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>PHPUnit 3.6.10 by Sebastian Bergmann.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;F&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Time: <span class="m">9</span> seconds, Memory: 3.00Mb&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;There was <span class="m">1</span> failure:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;1<span class="o">)</span> WebTest::testTitle
</span><span class='line'>Failed asserting that two strings are equal.
</span><span class='line'><span class="p">&amp;</span>mdash<span class="p">;</span> Expected
</span><span class='line'>+++ Actual
</span><span class='line'>@@ @@
</span><span class='line'>-<span class="p">&amp;</span>lsquo<span class="p">;</span>Example WWW Page<span class="p">&amp;</span>rsquo<span class="p">;</span>
</span><span class='line'>+<span class="p">&amp;</span>lsquo<span class="p">;</span>IANA — Example domains<span class="p">&amp;</span>rsquo<span class="p">;</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;/home/macbookpro/WebTest.php:13&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;FAILURES!
</span><span class='line'>Tests: 1, Assertions: 1, Failures: 1.
</span></code></pre></td></tr></table></div></figure></p>

<h2>End</h2>

<p>Thanks for reading. Please leave a comment below and let me know if you have any questions or suggestions.</p>
]]></content>
  </entry>
  
</feed>
